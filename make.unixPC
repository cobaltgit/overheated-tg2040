#makefile gcc, building for UNIX-Like OSes running on PCs
P= Overheated
CFLAGS= -g -O3 `pkg-config --cflags SDL_mixer sdl`
OUTFILE= -o overheated.x86
LDLIBS= `pkg-config --libs SDL_mixer sdl` -lm
DEFINES= -D PC
CC= gcc
OBJECTS= OAM.o SDL_Text.o SDL_utils.o announcer.o audio.o background.o bonus.o bullets.o cMath.o charset.o collisions.o effects.o enemies.o enemyBullet.o espEnemies.o game.o gameConfig.o gameOver.o input.o intro.o l_PLweapons.o l_bgIns.o l_music.o l_objects.o l_stages.o l_tileObjects.o l_trajectories.o license.o loadData.o main.o menu.o music.o musicTest.o nameInput.o objects.o player.o programTypes.o ranking.o score.o scoreboard.o service.o sfx.o spawn.o staffRoll.o starfield.o str_utils.o tileObjects.o time.o trackPlayer.o trajectory.o video.o weapon.o 

$(P): $(OBJECTS)
	$(CC) $(CFLAGS) $(OBJECTS) $(DEFINES) $(LDLIBS) $(OUTFILE)


OAM.o: OAM.c globalDefines.h d_GameObject.h d_Charset.h
	$(CC) OAM.c -c $(DEFINES) $(CFLAGS)

SDL_Text.o: SDL_Text.c d_bmFont.h str_utils.h SDL_Text.h
	$(CC) SDL_Text.c -c $(DEFINES) $(CFLAGS)

SDL_utils.o: SDL_utils.c globalDefines.h SDL_utils.h
	$(CC) SDL_utils.c -c $(DEFINES) $(CFLAGS)

announcer.o: announcer.c globalDefines.h d_bmFont.h announcer.h \
 d_advert.h SDL_Text.h loadData.h l_sfx.h sfx.h
	$(CC) announcer.c -c $(DEFINES) $(CFLAGS)

audio.o: audio.c system_var_type.h str_utils.h d_audio.h audio.h
	$(CC) audio.c -c $(DEFINES) $(CFLAGS)

background.o: background.c globalDefines.h d_Charset.h d_GameObject.h \
 d_background.h l_bgIns.h l_tileObjects.h background.h collisions.h \
 objects.h
	$(CC) background.c -c $(DEFINES) $(CFLAGS)

bonus.o: bonus.c d_GameObject.h d_Charset.h globalDefines.h globalVars.h \
 l_sfx.h d_trajectory.h l_trajectories.h d_bonus.h d_input.h objects.h \
 effects.h player.h bonus.h debug.h sfx.h score.h trajectory.h
	$(CC) bonus.c -c $(DEFINES) $(CFLAGS)

bullets.o: bullets.c globalDefines.h d_GameObject.h objects.h d_Charset.h \
 enemies.h bullets.h globalVars.h effects.h game.h
	$(CC) bullets.c -c $(DEFINES) $(CFLAGS)

cMath.o: cMath.c
	$(CC) cMath.c -c $(DEFINES) $(CFLAGS)

charset.o: charset.c d_Charset.h
	$(CC) charset.c -c $(DEFINES) $(CFLAGS)

collisions.o: collisions.c globalDefines.h d_GameObject.h d_Charset.h \
 d_background.h globalVars.h background.h
	$(CC) collisions.c -c $(DEFINES) $(CFLAGS)

effects.o: effects.c globalDefines.h d_GameObject.h d_effects.h \
 d_bmFont.h l_sfx.h globalVars.h effects.h OAM.h objects.h debug.h sfx.h \
 announcer.h game.h player.h mediumMultExplosionsWaves.inc \
 bigMultExplosionsWaves.inc
	$(CC) effects.c -c $(DEFINES) $(CFLAGS)

enemies.o: enemies.c d_programTypes.h globalDefines.h d_GameObject.h \
 d_Charset.h d_trajectory.h d_enemies.h globalVars.h l_trajectories.h \
 trajectory.h cMath.h objects.h enemyBullet.h player.h enemies.h \
 effects.h announcer.h bonus.h debug.h time.h
	$(CC) enemies.c -c $(DEFINES) $(CFLAGS)

enemyBullet.o: enemyBullet.c d_programTypes.h globalDefines.h \
 d_GameObject.h objects.h d_Charset.h d_enemyBullet.h enemyBullet.h \
 enemies.h bullets.h globalVars.h game.h
	$(CC) enemyBullet.c -c $(DEFINES) $(CFLAGS)

espEnemies.o: espEnemies.c globalDefines.h d_programTypes.h \
 d_GameObject.h d_Charset.h d_trajectory.h d_enemies.h globalVars.h \
 d_bmFont.h OAM.h cMath.h objects.h l_trajectories.h enemyBullet.h \
 enemies.h effects.h bonus.h debug.h time.h announcer.h game.h
	$(CC) espEnemies.c -c $(DEFINES) $(CFLAGS)

game.o: game.c globalDefines.h SDL_utils.h d_GameObject.h d_Charset.h \
 d_spawn.h d_background.h d_stage.h d_bmFont.h d_input.h globalVars.h \
 d_filePaths.h audio.h video.h sfx.h l_music.h music.h loadData.h input.h \
 objects.h enemyBullet.h enemies.h player.h spawn.h background.h \
 SDL_Text.h announcer.h time.h gameOver.h l_stages.h collisions.h score.h \
 scoreboard.h nameInput.h
	$(CC) game.c -c $(DEFINES) $(CFLAGS)

gameConfig.o: gameConfig.c d_gameConfig.h globalDefines.h globalVars.h \
 loadData.h audio.h music.h video.h
	$(CC) gameConfig.c -c $(DEFINES) $(CFLAGS)

gameOver.o: gameOver.c globalDefines.h d_bmFont.h globalVars.h score.h \
 scoreboard.h SDL_Text.h
	$(CC) gameOver.c -c $(DEFINES) $(CFLAGS)

input.o: input.c d_input.h loadData.h input.h
	$(CC) input.c -c $(DEFINES) $(CFLAGS)

intro.o: intro.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 globalVars.h intro.h video.h audio.h music.h l_music.h input.h \
 SDL_Text.h game.h loadData.h
	$(CC) intro.c -c $(DEFINES) $(CFLAGS)

l_PLweapons.o: l_PLweapons.c globalDefines.h d_GameObject.h d_Charset.h \
 d_input.h globalVars.h enemies.h d_player.h weapon.h
	$(CC) l_PLweapons.c -c $(DEFINES) $(CFLAGS)

l_bgIns.o: l_bgIns.c globalDefines.h d_Charset.h d_GameObject.h charset.h \
 d_background.h l_bgIns.h
	$(CC) l_bgIns.c -c $(DEFINES) $(CFLAGS)

l_music.o: l_music.c l_music.h
	$(CC) l_music.c -c $(DEFINES) $(CFLAGS)

l_objects.o: l_objects.c globalDefines.h d_GameObject.h d_Charset.h \
 globalVars.h l_objects.h enemies.h enemyBullet.h effects.h espEnemies.h
	$(CC) l_objects.c -c $(DEFINES) $(CFLAGS)

l_stages.o: l_stages.c l_stages.h
	$(CC) l_stages.c -c $(DEFINES) $(CFLAGS)

l_tileObjects.o: l_tileObjects.c globalDefines.h d_GameObject.h \
 d_Charset.h globalVars.h tileObjects.h
	$(CC) l_tileObjects.c -c $(DEFINES) $(CFLAGS)

l_trajectories.o: l_trajectories.c d_trajectory.h \
 trajectories/stomLD_trajectory.inc trajectories/stomRD_trajectory.inc \
 trajectories/stomLU_trajectory.inc trajectories/stomRU_trajectory.inc \
 trajectories/bonus_trajectory.inc trajectories/spitze_trajectory.inc \
 trajectories/vtSpitzeR_trajectory.inc \
 trajectories/vtSpitzeL_trajectory.inc \
 trajectories/farbenL_trajectory.inc trajectories/farbenR_trajectory.inc \
 trajectories/laroc_trajectory.inc trajectories/jumpaLU_trajectory.inc \
 trajectories/jumpaRU_trajectory.inc trajectories/jumpaLD_trajectory.inc \
 trajectories/jumpaRD_trajectory.inc trajectories/midBoss_trajectory.inc \
 trajectories/tirtasL_trajectory.inc trajectories/tirtasR_trajectory.inc \
 trajectories/r_archer_trajectory.inc \
 trajectories/l_archer_trajectory.inc trajectories/maraac_trajectory.inc \
 trajectories/nakser_trajectory.inc trajectories/bKnightL_trajectory.inc \
 trajectories/bKnightR_trajectory.inc trajectories/boss2_trajectory.inc
	$(CC) l_trajectories.c -c $(DEFINES) $(CFLAGS)

license.o: license.c
	$(CC) license.c -c $(DEFINES) $(CFLAGS)

loadData.o: loadData.c globalDefines.h d_input.h system_var_type.h \
 str_utils.h d_GameObject.h d_Charset.h charset.h d_spawn.h \
 d_background.h l_bgIns.h d_stage.h d_bmFont.h globalVars.h time.h \
 enemies.h d_gameConfig.h loadData.h SDL_utils.h l_objects.h
	$(CC) loadData.c -c $(DEFINES) $(CFLAGS)

main.o: main.c license.c globalDefines.h d_GameObject.h audio.h video.h \
 menu.h game.h intro.h scoreboard.h gameConfig.h SDL_utils.h debug.h
	$(CC) main.c -c $(DEFINES) $(CFLAGS)

menu.o: menu.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 globalVars.h video.h audio.h music.h l_music.h input.h SDL_Text.h game.h \
 loadData.h ranking.h service.h staffRoll.h
	$(CC) menu.c -c $(DEFINES) $(CFLAGS)

music.o: music.c music.h l_music.h trackPlayer.h
	$(CC) music.c -c $(DEFINES) $(CFLAGS)

musicTest.o: musicTest.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 globalVars.h audio.h music.h input.h SDL_Text.h loadData.h trackPlayer.h
	$(CC) musicTest.c -c $(DEFINES) $(CFLAGS)

nameInput.o: nameInput.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 d_star.h globalVars.h video.h audio.h music.h input.h SDL_Text.h \
 loadData.h scoreboard.h starfield.h
	$(CC) nameInput.c -c $(DEFINES) $(CFLAGS)

objects.o: objects.c globalDefines.h d_Charset.h d_GameObject.h \
 d_background.h globalVars.h enemies.h enemyBullet.h collisions.h \
 objects.h bonus.h bullets.h
	$(CC) objects.c -c $(DEFINES) $(CFLAGS)

player.o: player.c globalDefines.h d_input.h d_GameObject.h d_Charset.h \
 objects.h enemies.h d_player.h player.h weapon.h l_PLweapons.h \
 globalVars.h sfx.h l_sfx.h debug.h
	$(CC) player.c -c $(DEFINES) $(CFLAGS)

programTypes.o: programTypes.c d_programTypes.h
	$(CC) programTypes.c -c $(DEFINES) $(CFLAGS)

ranking.o: ranking.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 d_star.h globalVars.h video.h audio.h music.h input.h SDL_Text.h \
 loadData.h scoreboard.h starfield.h
	$(CC) ranking.c -c $(DEFINES) $(CFLAGS)

score.o: score.c globalDefines.h d_score.h score.h scoreboard.h
	$(CC) score.c -c $(DEFINES) $(CFLAGS)

scoreboard.o: scoreboard.c system_var_type.h d_scoreboard.h str_utils.h \
 scoreboard.h
	$(CC) scoreboard.c -c $(DEFINES) $(CFLAGS)

service.o: service.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 globalVars.h video.h audio.h music.h input.h SDL_Text.h loadData.h \
 scoreboard.h gameConfig.h
	$(CC) service.c -c $(DEFINES) $(CFLAGS)

sfx.o: sfx.c d_audio.h l_sfx.h system_var_type.h str_utils.h
	$(CC) sfx.c -c $(DEFINES) $(CFLAGS)

spawn.o: spawn.c globalDefines.h d_GameObject.h d_Charset.h d_spawn.h \
 globalVars.h debug.h enemies.h objects.h
	$(CC) spawn.c -c $(DEFINES) $(CFLAGS)

staffRoll.o: staffRoll.c globalDefines.h SDL_utils.h d_bmFont.h d_input.h \
 globalVars.h intro.h video.h audio.h music.h l_music.h input.h \
 SDL_Text.h game.h loadData.h staffRollText.inc
	$(CC) staffRoll.c -c $(DEFINES) $(CFLAGS)

starfield.o: starfield.c globalDefines.h d_star.h
	$(CC) starfield.c -c $(DEFINES) $(CFLAGS)

str_utils.o: str_utils.c system_var_type.h str_utils.h
	$(CC) str_utils.c -c $(DEFINES) $(CFLAGS)

tileObjects.o: tileObjects.c globalDefines.h d_GameObject.h d_Charset.h \
 d_tileObjects.h d_background.h globalVars.h cMath.h objects.h \
 enemyBullet.h enemies.h effects.h bonus.h tileObjects.h debug.h time.h \
 background.h announcer.h
	$(CC) tileObjects.c -c $(DEFINES) $(CFLAGS)

time.o: time.c globalDefines.h
	$(CC) time.c -c $(DEFINES) $(CFLAGS)

trackPlayer.o: trackPlayer.c system_var_type.h str_utils.h d_audio.h \
 audio.h trackPlayer.h
	$(CC) trackPlayer.c -c $(DEFINES) $(CFLAGS)

trajectory.o: trajectory.c globalDefines.h globalVars.h d_trajectory.h \
 trajectory.h
	$(CC) trajectory.c -c $(DEFINES) $(CFLAGS)

video.o: video.c globalDefines.h d_GameObject.h d_video.h SDL_utils.h
	$(CC) video.c -c $(DEFINES) $(CFLAGS)

weapon.o: weapon.c globalDefines.h d_input.h d_GameObject.h d_Charset.h \
 objects.h enemies.h d_player.h weapon.h l_PLweapons.h globalVars.h \
 debug.h
	$(CC) weapon.c -c $(DEFINES) $(CFLAGS)

clean:
	rm *.o
	rm  -r./opk/data
	rm  -r./opk/trajectories
